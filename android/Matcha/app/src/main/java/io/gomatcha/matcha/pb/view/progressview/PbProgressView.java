// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gomatcha.io/matcha/pb/view/progressview/progressview.proto

package io.gomatcha.matcha.pb.view.progressview;

public final class PbProgressView {
  private PbProgressView() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ViewOrBuilder extends
      // @@protoc_insertion_point(interface_extends:progressview.View)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double progress = 1;</code>
     */
    double getProgress();

    /**
     * <code>.matcha.Color progressColor = 2;</code>
     */
    boolean hasProgressColor();
    /**
     * <code>.matcha.Color progressColor = 2;</code>
     */
    io.gomatcha.matcha.pb.Pb.Color getProgressColor();
    /**
     * <code>.matcha.Color progressColor = 2;</code>
     */
    io.gomatcha.matcha.pb.Pb.ColorOrBuilder getProgressColorOrBuilder();
  }
  /**
   * Protobuf type {@code progressview.View}
   */
  public  static final class View extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:progressview.View)
      ViewOrBuilder {
    // Use View.newBuilder() to construct.
    private View(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private View() {
      progress_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private View(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 9: {

              progress_ = input.readDouble();
              break;
            }
            case 18: {
              io.gomatcha.matcha.pb.Pb.Color.Builder subBuilder = null;
              if (progressColor_ != null) {
                subBuilder = progressColor_.toBuilder();
              }
              progressColor_ = input.readMessage(io.gomatcha.matcha.pb.Pb.Color.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(progressColor_);
                progressColor_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.gomatcha.matcha.pb.view.progressview.PbProgressView.internal_static_progressview_View_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.gomatcha.matcha.pb.view.progressview.PbProgressView.internal_static_progressview_View_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.gomatcha.matcha.pb.view.progressview.PbProgressView.View.class, io.gomatcha.matcha.pb.view.progressview.PbProgressView.View.Builder.class);
    }

    public static final int PROGRESS_FIELD_NUMBER = 1;
    private double progress_;
    /**
     * <code>double progress = 1;</code>
     */
    public double getProgress() {
      return progress_;
    }

    public static final int PROGRESSCOLOR_FIELD_NUMBER = 2;
    private io.gomatcha.matcha.pb.Pb.Color progressColor_;
    /**
     * <code>.matcha.Color progressColor = 2;</code>
     */
    public boolean hasProgressColor() {
      return progressColor_ != null;
    }
    /**
     * <code>.matcha.Color progressColor = 2;</code>
     */
    public io.gomatcha.matcha.pb.Pb.Color getProgressColor() {
      return progressColor_ == null ? io.gomatcha.matcha.pb.Pb.Color.getDefaultInstance() : progressColor_;
    }
    /**
     * <code>.matcha.Color progressColor = 2;</code>
     */
    public io.gomatcha.matcha.pb.Pb.ColorOrBuilder getProgressColorOrBuilder() {
      return getProgressColor();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (progress_ != 0D) {
        output.writeDouble(1, progress_);
      }
      if (progressColor_ != null) {
        output.writeMessage(2, getProgressColor());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (progress_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, progress_);
      }
      if (progressColor_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getProgressColor());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.gomatcha.matcha.pb.view.progressview.PbProgressView.View)) {
        return super.equals(obj);
      }
      io.gomatcha.matcha.pb.view.progressview.PbProgressView.View other = (io.gomatcha.matcha.pb.view.progressview.PbProgressView.View) obj;

      boolean result = true;
      result = result && (
          java.lang.Double.doubleToLongBits(getProgress())
          == java.lang.Double.doubleToLongBits(
              other.getProgress()));
      result = result && (hasProgressColor() == other.hasProgressColor());
      if (hasProgressColor()) {
        result = result && getProgressColor()
            .equals(other.getProgressColor());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PROGRESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getProgress()));
      if (hasProgressColor()) {
        hash = (37 * hash) + PROGRESSCOLOR_FIELD_NUMBER;
        hash = (53 * hash) + getProgressColor().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.gomatcha.matcha.pb.view.progressview.PbProgressView.View parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gomatcha.matcha.pb.view.progressview.PbProgressView.View parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gomatcha.matcha.pb.view.progressview.PbProgressView.View parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gomatcha.matcha.pb.view.progressview.PbProgressView.View parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gomatcha.matcha.pb.view.progressview.PbProgressView.View parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gomatcha.matcha.pb.view.progressview.PbProgressView.View parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gomatcha.matcha.pb.view.progressview.PbProgressView.View parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.gomatcha.matcha.pb.view.progressview.PbProgressView.View parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.gomatcha.matcha.pb.view.progressview.PbProgressView.View parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.gomatcha.matcha.pb.view.progressview.PbProgressView.View parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.gomatcha.matcha.pb.view.progressview.PbProgressView.View parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.gomatcha.matcha.pb.view.progressview.PbProgressView.View parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.gomatcha.matcha.pb.view.progressview.PbProgressView.View prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code progressview.View}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:progressview.View)
        io.gomatcha.matcha.pb.view.progressview.PbProgressView.ViewOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.gomatcha.matcha.pb.view.progressview.PbProgressView.internal_static_progressview_View_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.gomatcha.matcha.pb.view.progressview.PbProgressView.internal_static_progressview_View_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.gomatcha.matcha.pb.view.progressview.PbProgressView.View.class, io.gomatcha.matcha.pb.view.progressview.PbProgressView.View.Builder.class);
      }

      // Construct using io.gomatcha.matcha.pb.view.progressview.PbProgressView.View.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        progress_ = 0D;

        if (progressColorBuilder_ == null) {
          progressColor_ = null;
        } else {
          progressColor_ = null;
          progressColorBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.gomatcha.matcha.pb.view.progressview.PbProgressView.internal_static_progressview_View_descriptor;
      }

      public io.gomatcha.matcha.pb.view.progressview.PbProgressView.View getDefaultInstanceForType() {
        return io.gomatcha.matcha.pb.view.progressview.PbProgressView.View.getDefaultInstance();
      }

      public io.gomatcha.matcha.pb.view.progressview.PbProgressView.View build() {
        io.gomatcha.matcha.pb.view.progressview.PbProgressView.View result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.gomatcha.matcha.pb.view.progressview.PbProgressView.View buildPartial() {
        io.gomatcha.matcha.pb.view.progressview.PbProgressView.View result = new io.gomatcha.matcha.pb.view.progressview.PbProgressView.View(this);
        result.progress_ = progress_;
        if (progressColorBuilder_ == null) {
          result.progressColor_ = progressColor_;
        } else {
          result.progressColor_ = progressColorBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.gomatcha.matcha.pb.view.progressview.PbProgressView.View) {
          return mergeFrom((io.gomatcha.matcha.pb.view.progressview.PbProgressView.View)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.gomatcha.matcha.pb.view.progressview.PbProgressView.View other) {
        if (other == io.gomatcha.matcha.pb.view.progressview.PbProgressView.View.getDefaultInstance()) return this;
        if (other.getProgress() != 0D) {
          setProgress(other.getProgress());
        }
        if (other.hasProgressColor()) {
          mergeProgressColor(other.getProgressColor());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.gomatcha.matcha.pb.view.progressview.PbProgressView.View parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.gomatcha.matcha.pb.view.progressview.PbProgressView.View) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double progress_ ;
      /**
       * <code>double progress = 1;</code>
       */
      public double getProgress() {
        return progress_;
      }
      /**
       * <code>double progress = 1;</code>
       */
      public Builder setProgress(double value) {
        
        progress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double progress = 1;</code>
       */
      public Builder clearProgress() {
        
        progress_ = 0D;
        onChanged();
        return this;
      }

      private io.gomatcha.matcha.pb.Pb.Color progressColor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.gomatcha.matcha.pb.Pb.Color, io.gomatcha.matcha.pb.Pb.Color.Builder, io.gomatcha.matcha.pb.Pb.ColorOrBuilder> progressColorBuilder_;
      /**
       * <code>.matcha.Color progressColor = 2;</code>
       */
      public boolean hasProgressColor() {
        return progressColorBuilder_ != null || progressColor_ != null;
      }
      /**
       * <code>.matcha.Color progressColor = 2;</code>
       */
      public io.gomatcha.matcha.pb.Pb.Color getProgressColor() {
        if (progressColorBuilder_ == null) {
          return progressColor_ == null ? io.gomatcha.matcha.pb.Pb.Color.getDefaultInstance() : progressColor_;
        } else {
          return progressColorBuilder_.getMessage();
        }
      }
      /**
       * <code>.matcha.Color progressColor = 2;</code>
       */
      public Builder setProgressColor(io.gomatcha.matcha.pb.Pb.Color value) {
        if (progressColorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          progressColor_ = value;
          onChanged();
        } else {
          progressColorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.matcha.Color progressColor = 2;</code>
       */
      public Builder setProgressColor(
          io.gomatcha.matcha.pb.Pb.Color.Builder builderForValue) {
        if (progressColorBuilder_ == null) {
          progressColor_ = builderForValue.build();
          onChanged();
        } else {
          progressColorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.matcha.Color progressColor = 2;</code>
       */
      public Builder mergeProgressColor(io.gomatcha.matcha.pb.Pb.Color value) {
        if (progressColorBuilder_ == null) {
          if (progressColor_ != null) {
            progressColor_ =
              io.gomatcha.matcha.pb.Pb.Color.newBuilder(progressColor_).mergeFrom(value).buildPartial();
          } else {
            progressColor_ = value;
          }
          onChanged();
        } else {
          progressColorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.matcha.Color progressColor = 2;</code>
       */
      public Builder clearProgressColor() {
        if (progressColorBuilder_ == null) {
          progressColor_ = null;
          onChanged();
        } else {
          progressColor_ = null;
          progressColorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.matcha.Color progressColor = 2;</code>
       */
      public io.gomatcha.matcha.pb.Pb.Color.Builder getProgressColorBuilder() {
        
        onChanged();
        return getProgressColorFieldBuilder().getBuilder();
      }
      /**
       * <code>.matcha.Color progressColor = 2;</code>
       */
      public io.gomatcha.matcha.pb.Pb.ColorOrBuilder getProgressColorOrBuilder() {
        if (progressColorBuilder_ != null) {
          return progressColorBuilder_.getMessageOrBuilder();
        } else {
          return progressColor_ == null ?
              io.gomatcha.matcha.pb.Pb.Color.getDefaultInstance() : progressColor_;
        }
      }
      /**
       * <code>.matcha.Color progressColor = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.gomatcha.matcha.pb.Pb.Color, io.gomatcha.matcha.pb.Pb.Color.Builder, io.gomatcha.matcha.pb.Pb.ColorOrBuilder> 
          getProgressColorFieldBuilder() {
        if (progressColorBuilder_ == null) {
          progressColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.gomatcha.matcha.pb.Pb.Color, io.gomatcha.matcha.pb.Pb.Color.Builder, io.gomatcha.matcha.pb.Pb.ColorOrBuilder>(
                  getProgressColor(),
                  getParentForChildren(),
                  isClean());
          progressColor_ = null;
        }
        return progressColorBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:progressview.View)
    }

    // @@protoc_insertion_point(class_scope:progressview.View)
    private static final io.gomatcha.matcha.pb.view.progressview.PbProgressView.View DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.gomatcha.matcha.pb.view.progressview.PbProgressView.View();
    }

    public static io.gomatcha.matcha.pb.view.progressview.PbProgressView.View getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<View>
        PARSER = new com.google.protobuf.AbstractParser<View>() {
      public View parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new View(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<View> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<View> getParserForType() {
      return PARSER;
    }

    public io.gomatcha.matcha.pb.view.progressview.PbProgressView.View getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_progressview_View_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_progressview_View_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n:gomatcha.io/matcha/pb/view/progressvie" +
      "w/progressview.proto\022\014progressview\032!goma" +
      "tcha.io/matcha/pb/image.proto\">\n\004View\022\020\n" +
      "\010progress\030\001 \001(\001\022$\n\rprogressColor\030\002 \001(\0132\r" +
      ".matcha.ColorB^\n\'io.gomatcha.matcha.pb.v" +
      "iew.progressviewB\016PbProgressViewZ\014progre" +
      "ssview\242\002\024MatchaProgressViewPBb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.gomatcha.matcha.pb.Pb.getDescriptor(),
        }, assigner);
    internal_static_progressview_View_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_progressview_View_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_progressview_View_descriptor,
        new java.lang.String[] { "Progress", "ProgressColor", });
    io.gomatcha.matcha.pb.Pb.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
