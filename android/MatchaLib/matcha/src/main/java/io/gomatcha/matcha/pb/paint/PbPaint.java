// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gomatcha.io/matcha/pb/paint/paint.proto

package io.gomatcha.matcha.pb.paint;

public final class PbPaint {
  private PbPaint() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface StyleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:matcha.paint.Style)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double transparency = 1;</code>
     */
    double getTransparency();

    /**
     * <code>.matcha.Color backgroundColor = 2;</code>
     */
    boolean hasBackgroundColor();
    /**
     * <code>.matcha.Color backgroundColor = 2;</code>
     */
    io.gomatcha.matcha.pb.Pb.Color getBackgroundColor();
    /**
     * <code>.matcha.Color backgroundColor = 2;</code>
     */
    io.gomatcha.matcha.pb.Pb.ColorOrBuilder getBackgroundColorOrBuilder();

    /**
     * <code>.matcha.Color borderColor = 3;</code>
     */
    boolean hasBorderColor();
    /**
     * <code>.matcha.Color borderColor = 3;</code>
     */
    io.gomatcha.matcha.pb.Pb.Color getBorderColor();
    /**
     * <code>.matcha.Color borderColor = 3;</code>
     */
    io.gomatcha.matcha.pb.Pb.ColorOrBuilder getBorderColorOrBuilder();

    /**
     * <code>double borderWidth = 4;</code>
     */
    double getBorderWidth();

    /**
     * <code>double cornerRadius = 5;</code>
     */
    double getCornerRadius();

    /**
     * <code>double shadowRadius = 7;</code>
     */
    double getShadowRadius();

    /**
     * <code>.matcha.layout.Point shadowOffset = 8;</code>
     */
    boolean hasShadowOffset();
    /**
     * <code>.matcha.layout.Point shadowOffset = 8;</code>
     */
    io.gomatcha.matcha.pb.layout.PbLayout.Point getShadowOffset();
    /**
     * <code>.matcha.layout.Point shadowOffset = 8;</code>
     */
    io.gomatcha.matcha.pb.layout.PbLayout.PointOrBuilder getShadowOffsetOrBuilder();

    /**
     * <code>.matcha.Color shadowColor = 9;</code>
     */
    boolean hasShadowColor();
    /**
     * <code>.matcha.Color shadowColor = 9;</code>
     */
    io.gomatcha.matcha.pb.Pb.Color getShadowColor();
    /**
     * <code>.matcha.Color shadowColor = 9;</code>
     */
    io.gomatcha.matcha.pb.Pb.ColorOrBuilder getShadowColorOrBuilder();
  }
  /**
   * Protobuf type {@code matcha.paint.Style}
   */
  public  static final class Style extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:matcha.paint.Style)
      StyleOrBuilder {
    // Use Style.newBuilder() to construct.
    private Style(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Style() {
      transparency_ = 0D;
      borderWidth_ = 0D;
      cornerRadius_ = 0D;
      shadowRadius_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Style(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 9: {

              transparency_ = input.readDouble();
              break;
            }
            case 18: {
              io.gomatcha.matcha.pb.Pb.Color.Builder subBuilder = null;
              if (backgroundColor_ != null) {
                subBuilder = backgroundColor_.toBuilder();
              }
              backgroundColor_ = input.readMessage(io.gomatcha.matcha.pb.Pb.Color.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(backgroundColor_);
                backgroundColor_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.gomatcha.matcha.pb.Pb.Color.Builder subBuilder = null;
              if (borderColor_ != null) {
                subBuilder = borderColor_.toBuilder();
              }
              borderColor_ = input.readMessage(io.gomatcha.matcha.pb.Pb.Color.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(borderColor_);
                borderColor_ = subBuilder.buildPartial();
              }

              break;
            }
            case 33: {

              borderWidth_ = input.readDouble();
              break;
            }
            case 41: {

              cornerRadius_ = input.readDouble();
              break;
            }
            case 57: {

              shadowRadius_ = input.readDouble();
              break;
            }
            case 66: {
              io.gomatcha.matcha.pb.layout.PbLayout.Point.Builder subBuilder = null;
              if (shadowOffset_ != null) {
                subBuilder = shadowOffset_.toBuilder();
              }
              shadowOffset_ = input.readMessage(io.gomatcha.matcha.pb.layout.PbLayout.Point.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shadowOffset_);
                shadowOffset_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              io.gomatcha.matcha.pb.Pb.Color.Builder subBuilder = null;
              if (shadowColor_ != null) {
                subBuilder = shadowColor_.toBuilder();
              }
              shadowColor_ = input.readMessage(io.gomatcha.matcha.pb.Pb.Color.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shadowColor_);
                shadowColor_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.gomatcha.matcha.pb.paint.PbPaint.internal_static_matcha_paint_Style_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.gomatcha.matcha.pb.paint.PbPaint.internal_static_matcha_paint_Style_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.gomatcha.matcha.pb.paint.PbPaint.Style.class, io.gomatcha.matcha.pb.paint.PbPaint.Style.Builder.class);
    }

    public static final int TRANSPARENCY_FIELD_NUMBER = 1;
    private double transparency_;
    /**
     * <code>double transparency = 1;</code>
     */
    public double getTransparency() {
      return transparency_;
    }

    public static final int BACKGROUNDCOLOR_FIELD_NUMBER = 2;
    private io.gomatcha.matcha.pb.Pb.Color backgroundColor_;
    /**
     * <code>.matcha.Color backgroundColor = 2;</code>
     */
    public boolean hasBackgroundColor() {
      return backgroundColor_ != null;
    }
    /**
     * <code>.matcha.Color backgroundColor = 2;</code>
     */
    public io.gomatcha.matcha.pb.Pb.Color getBackgroundColor() {
      return backgroundColor_ == null ? io.gomatcha.matcha.pb.Pb.Color.getDefaultInstance() : backgroundColor_;
    }
    /**
     * <code>.matcha.Color backgroundColor = 2;</code>
     */
    public io.gomatcha.matcha.pb.Pb.ColorOrBuilder getBackgroundColorOrBuilder() {
      return getBackgroundColor();
    }

    public static final int BORDERCOLOR_FIELD_NUMBER = 3;
    private io.gomatcha.matcha.pb.Pb.Color borderColor_;
    /**
     * <code>.matcha.Color borderColor = 3;</code>
     */
    public boolean hasBorderColor() {
      return borderColor_ != null;
    }
    /**
     * <code>.matcha.Color borderColor = 3;</code>
     */
    public io.gomatcha.matcha.pb.Pb.Color getBorderColor() {
      return borderColor_ == null ? io.gomatcha.matcha.pb.Pb.Color.getDefaultInstance() : borderColor_;
    }
    /**
     * <code>.matcha.Color borderColor = 3;</code>
     */
    public io.gomatcha.matcha.pb.Pb.ColorOrBuilder getBorderColorOrBuilder() {
      return getBorderColor();
    }

    public static final int BORDERWIDTH_FIELD_NUMBER = 4;
    private double borderWidth_;
    /**
     * <code>double borderWidth = 4;</code>
     */
    public double getBorderWidth() {
      return borderWidth_;
    }

    public static final int CORNERRADIUS_FIELD_NUMBER = 5;
    private double cornerRadius_;
    /**
     * <code>double cornerRadius = 5;</code>
     */
    public double getCornerRadius() {
      return cornerRadius_;
    }

    public static final int SHADOWRADIUS_FIELD_NUMBER = 7;
    private double shadowRadius_;
    /**
     * <code>double shadowRadius = 7;</code>
     */
    public double getShadowRadius() {
      return shadowRadius_;
    }

    public static final int SHADOWOFFSET_FIELD_NUMBER = 8;
    private io.gomatcha.matcha.pb.layout.PbLayout.Point shadowOffset_;
    /**
     * <code>.matcha.layout.Point shadowOffset = 8;</code>
     */
    public boolean hasShadowOffset() {
      return shadowOffset_ != null;
    }
    /**
     * <code>.matcha.layout.Point shadowOffset = 8;</code>
     */
    public io.gomatcha.matcha.pb.layout.PbLayout.Point getShadowOffset() {
      return shadowOffset_ == null ? io.gomatcha.matcha.pb.layout.PbLayout.Point.getDefaultInstance() : shadowOffset_;
    }
    /**
     * <code>.matcha.layout.Point shadowOffset = 8;</code>
     */
    public io.gomatcha.matcha.pb.layout.PbLayout.PointOrBuilder getShadowOffsetOrBuilder() {
      return getShadowOffset();
    }

    public static final int SHADOWCOLOR_FIELD_NUMBER = 9;
    private io.gomatcha.matcha.pb.Pb.Color shadowColor_;
    /**
     * <code>.matcha.Color shadowColor = 9;</code>
     */
    public boolean hasShadowColor() {
      return shadowColor_ != null;
    }
    /**
     * <code>.matcha.Color shadowColor = 9;</code>
     */
    public io.gomatcha.matcha.pb.Pb.Color getShadowColor() {
      return shadowColor_ == null ? io.gomatcha.matcha.pb.Pb.Color.getDefaultInstance() : shadowColor_;
    }
    /**
     * <code>.matcha.Color shadowColor = 9;</code>
     */
    public io.gomatcha.matcha.pb.Pb.ColorOrBuilder getShadowColorOrBuilder() {
      return getShadowColor();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (transparency_ != 0D) {
        output.writeDouble(1, transparency_);
      }
      if (backgroundColor_ != null) {
        output.writeMessage(2, getBackgroundColor());
      }
      if (borderColor_ != null) {
        output.writeMessage(3, getBorderColor());
      }
      if (borderWidth_ != 0D) {
        output.writeDouble(4, borderWidth_);
      }
      if (cornerRadius_ != 0D) {
        output.writeDouble(5, cornerRadius_);
      }
      if (shadowRadius_ != 0D) {
        output.writeDouble(7, shadowRadius_);
      }
      if (shadowOffset_ != null) {
        output.writeMessage(8, getShadowOffset());
      }
      if (shadowColor_ != null) {
        output.writeMessage(9, getShadowColor());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (transparency_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, transparency_);
      }
      if (backgroundColor_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getBackgroundColor());
      }
      if (borderColor_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getBorderColor());
      }
      if (borderWidth_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, borderWidth_);
      }
      if (cornerRadius_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, cornerRadius_);
      }
      if (shadowRadius_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, shadowRadius_);
      }
      if (shadowOffset_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getShadowOffset());
      }
      if (shadowColor_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getShadowColor());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.gomatcha.matcha.pb.paint.PbPaint.Style)) {
        return super.equals(obj);
      }
      io.gomatcha.matcha.pb.paint.PbPaint.Style other = (io.gomatcha.matcha.pb.paint.PbPaint.Style) obj;

      boolean result = true;
      result = result && (
          java.lang.Double.doubleToLongBits(getTransparency())
          == java.lang.Double.doubleToLongBits(
              other.getTransparency()));
      result = result && (hasBackgroundColor() == other.hasBackgroundColor());
      if (hasBackgroundColor()) {
        result = result && getBackgroundColor()
            .equals(other.getBackgroundColor());
      }
      result = result && (hasBorderColor() == other.hasBorderColor());
      if (hasBorderColor()) {
        result = result && getBorderColor()
            .equals(other.getBorderColor());
      }
      result = result && (
          java.lang.Double.doubleToLongBits(getBorderWidth())
          == java.lang.Double.doubleToLongBits(
              other.getBorderWidth()));
      result = result && (
          java.lang.Double.doubleToLongBits(getCornerRadius())
          == java.lang.Double.doubleToLongBits(
              other.getCornerRadius()));
      result = result && (
          java.lang.Double.doubleToLongBits(getShadowRadius())
          == java.lang.Double.doubleToLongBits(
              other.getShadowRadius()));
      result = result && (hasShadowOffset() == other.hasShadowOffset());
      if (hasShadowOffset()) {
        result = result && getShadowOffset()
            .equals(other.getShadowOffset());
      }
      result = result && (hasShadowColor() == other.hasShadowColor());
      if (hasShadowColor()) {
        result = result && getShadowColor()
            .equals(other.getShadowColor());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TRANSPARENCY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTransparency()));
      if (hasBackgroundColor()) {
        hash = (37 * hash) + BACKGROUNDCOLOR_FIELD_NUMBER;
        hash = (53 * hash) + getBackgroundColor().hashCode();
      }
      if (hasBorderColor()) {
        hash = (37 * hash) + BORDERCOLOR_FIELD_NUMBER;
        hash = (53 * hash) + getBorderColor().hashCode();
      }
      hash = (37 * hash) + BORDERWIDTH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBorderWidth()));
      hash = (37 * hash) + CORNERRADIUS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getCornerRadius()));
      hash = (37 * hash) + SHADOWRADIUS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getShadowRadius()));
      if (hasShadowOffset()) {
        hash = (37 * hash) + SHADOWOFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getShadowOffset().hashCode();
      }
      if (hasShadowColor()) {
        hash = (37 * hash) + SHADOWCOLOR_FIELD_NUMBER;
        hash = (53 * hash) + getShadowColor().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.gomatcha.matcha.pb.paint.PbPaint.Style parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gomatcha.matcha.pb.paint.PbPaint.Style parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gomatcha.matcha.pb.paint.PbPaint.Style parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gomatcha.matcha.pb.paint.PbPaint.Style parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gomatcha.matcha.pb.paint.PbPaint.Style parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gomatcha.matcha.pb.paint.PbPaint.Style parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gomatcha.matcha.pb.paint.PbPaint.Style parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.gomatcha.matcha.pb.paint.PbPaint.Style parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.gomatcha.matcha.pb.paint.PbPaint.Style parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.gomatcha.matcha.pb.paint.PbPaint.Style parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.gomatcha.matcha.pb.paint.PbPaint.Style parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.gomatcha.matcha.pb.paint.PbPaint.Style parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.gomatcha.matcha.pb.paint.PbPaint.Style prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code matcha.paint.Style}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:matcha.paint.Style)
        io.gomatcha.matcha.pb.paint.PbPaint.StyleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.gomatcha.matcha.pb.paint.PbPaint.internal_static_matcha_paint_Style_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.gomatcha.matcha.pb.paint.PbPaint.internal_static_matcha_paint_Style_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.gomatcha.matcha.pb.paint.PbPaint.Style.class, io.gomatcha.matcha.pb.paint.PbPaint.Style.Builder.class);
      }

      // Construct using io.gomatcha.matcha.pb.paint.PbPaint.Style.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        transparency_ = 0D;

        if (backgroundColorBuilder_ == null) {
          backgroundColor_ = null;
        } else {
          backgroundColor_ = null;
          backgroundColorBuilder_ = null;
        }
        if (borderColorBuilder_ == null) {
          borderColor_ = null;
        } else {
          borderColor_ = null;
          borderColorBuilder_ = null;
        }
        borderWidth_ = 0D;

        cornerRadius_ = 0D;

        shadowRadius_ = 0D;

        if (shadowOffsetBuilder_ == null) {
          shadowOffset_ = null;
        } else {
          shadowOffset_ = null;
          shadowOffsetBuilder_ = null;
        }
        if (shadowColorBuilder_ == null) {
          shadowColor_ = null;
        } else {
          shadowColor_ = null;
          shadowColorBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.gomatcha.matcha.pb.paint.PbPaint.internal_static_matcha_paint_Style_descriptor;
      }

      public io.gomatcha.matcha.pb.paint.PbPaint.Style getDefaultInstanceForType() {
        return io.gomatcha.matcha.pb.paint.PbPaint.Style.getDefaultInstance();
      }

      public io.gomatcha.matcha.pb.paint.PbPaint.Style build() {
        io.gomatcha.matcha.pb.paint.PbPaint.Style result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.gomatcha.matcha.pb.paint.PbPaint.Style buildPartial() {
        io.gomatcha.matcha.pb.paint.PbPaint.Style result = new io.gomatcha.matcha.pb.paint.PbPaint.Style(this);
        result.transparency_ = transparency_;
        if (backgroundColorBuilder_ == null) {
          result.backgroundColor_ = backgroundColor_;
        } else {
          result.backgroundColor_ = backgroundColorBuilder_.build();
        }
        if (borderColorBuilder_ == null) {
          result.borderColor_ = borderColor_;
        } else {
          result.borderColor_ = borderColorBuilder_.build();
        }
        result.borderWidth_ = borderWidth_;
        result.cornerRadius_ = cornerRadius_;
        result.shadowRadius_ = shadowRadius_;
        if (shadowOffsetBuilder_ == null) {
          result.shadowOffset_ = shadowOffset_;
        } else {
          result.shadowOffset_ = shadowOffsetBuilder_.build();
        }
        if (shadowColorBuilder_ == null) {
          result.shadowColor_ = shadowColor_;
        } else {
          result.shadowColor_ = shadowColorBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.gomatcha.matcha.pb.paint.PbPaint.Style) {
          return mergeFrom((io.gomatcha.matcha.pb.paint.PbPaint.Style)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.gomatcha.matcha.pb.paint.PbPaint.Style other) {
        if (other == io.gomatcha.matcha.pb.paint.PbPaint.Style.getDefaultInstance()) return this;
        if (other.getTransparency() != 0D) {
          setTransparency(other.getTransparency());
        }
        if (other.hasBackgroundColor()) {
          mergeBackgroundColor(other.getBackgroundColor());
        }
        if (other.hasBorderColor()) {
          mergeBorderColor(other.getBorderColor());
        }
        if (other.getBorderWidth() != 0D) {
          setBorderWidth(other.getBorderWidth());
        }
        if (other.getCornerRadius() != 0D) {
          setCornerRadius(other.getCornerRadius());
        }
        if (other.getShadowRadius() != 0D) {
          setShadowRadius(other.getShadowRadius());
        }
        if (other.hasShadowOffset()) {
          mergeShadowOffset(other.getShadowOffset());
        }
        if (other.hasShadowColor()) {
          mergeShadowColor(other.getShadowColor());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.gomatcha.matcha.pb.paint.PbPaint.Style parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.gomatcha.matcha.pb.paint.PbPaint.Style) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double transparency_ ;
      /**
       * <code>double transparency = 1;</code>
       */
      public double getTransparency() {
        return transparency_;
      }
      /**
       * <code>double transparency = 1;</code>
       */
      public Builder setTransparency(double value) {
        
        transparency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double transparency = 1;</code>
       */
      public Builder clearTransparency() {
        
        transparency_ = 0D;
        onChanged();
        return this;
      }

      private io.gomatcha.matcha.pb.Pb.Color backgroundColor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.gomatcha.matcha.pb.Pb.Color, io.gomatcha.matcha.pb.Pb.Color.Builder, io.gomatcha.matcha.pb.Pb.ColorOrBuilder> backgroundColorBuilder_;
      /**
       * <code>.matcha.Color backgroundColor = 2;</code>
       */
      public boolean hasBackgroundColor() {
        return backgroundColorBuilder_ != null || backgroundColor_ != null;
      }
      /**
       * <code>.matcha.Color backgroundColor = 2;</code>
       */
      public io.gomatcha.matcha.pb.Pb.Color getBackgroundColor() {
        if (backgroundColorBuilder_ == null) {
          return backgroundColor_ == null ? io.gomatcha.matcha.pb.Pb.Color.getDefaultInstance() : backgroundColor_;
        } else {
          return backgroundColorBuilder_.getMessage();
        }
      }
      /**
       * <code>.matcha.Color backgroundColor = 2;</code>
       */
      public Builder setBackgroundColor(io.gomatcha.matcha.pb.Pb.Color value) {
        if (backgroundColorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backgroundColor_ = value;
          onChanged();
        } else {
          backgroundColorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.matcha.Color backgroundColor = 2;</code>
       */
      public Builder setBackgroundColor(
          io.gomatcha.matcha.pb.Pb.Color.Builder builderForValue) {
        if (backgroundColorBuilder_ == null) {
          backgroundColor_ = builderForValue.build();
          onChanged();
        } else {
          backgroundColorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.matcha.Color backgroundColor = 2;</code>
       */
      public Builder mergeBackgroundColor(io.gomatcha.matcha.pb.Pb.Color value) {
        if (backgroundColorBuilder_ == null) {
          if (backgroundColor_ != null) {
            backgroundColor_ =
              io.gomatcha.matcha.pb.Pb.Color.newBuilder(backgroundColor_).mergeFrom(value).buildPartial();
          } else {
            backgroundColor_ = value;
          }
          onChanged();
        } else {
          backgroundColorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.matcha.Color backgroundColor = 2;</code>
       */
      public Builder clearBackgroundColor() {
        if (backgroundColorBuilder_ == null) {
          backgroundColor_ = null;
          onChanged();
        } else {
          backgroundColor_ = null;
          backgroundColorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.matcha.Color backgroundColor = 2;</code>
       */
      public io.gomatcha.matcha.pb.Pb.Color.Builder getBackgroundColorBuilder() {
        
        onChanged();
        return getBackgroundColorFieldBuilder().getBuilder();
      }
      /**
       * <code>.matcha.Color backgroundColor = 2;</code>
       */
      public io.gomatcha.matcha.pb.Pb.ColorOrBuilder getBackgroundColorOrBuilder() {
        if (backgroundColorBuilder_ != null) {
          return backgroundColorBuilder_.getMessageOrBuilder();
        } else {
          return backgroundColor_ == null ?
              io.gomatcha.matcha.pb.Pb.Color.getDefaultInstance() : backgroundColor_;
        }
      }
      /**
       * <code>.matcha.Color backgroundColor = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.gomatcha.matcha.pb.Pb.Color, io.gomatcha.matcha.pb.Pb.Color.Builder, io.gomatcha.matcha.pb.Pb.ColorOrBuilder> 
          getBackgroundColorFieldBuilder() {
        if (backgroundColorBuilder_ == null) {
          backgroundColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.gomatcha.matcha.pb.Pb.Color, io.gomatcha.matcha.pb.Pb.Color.Builder, io.gomatcha.matcha.pb.Pb.ColorOrBuilder>(
                  getBackgroundColor(),
                  getParentForChildren(),
                  isClean());
          backgroundColor_ = null;
        }
        return backgroundColorBuilder_;
      }

      private io.gomatcha.matcha.pb.Pb.Color borderColor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.gomatcha.matcha.pb.Pb.Color, io.gomatcha.matcha.pb.Pb.Color.Builder, io.gomatcha.matcha.pb.Pb.ColorOrBuilder> borderColorBuilder_;
      /**
       * <code>.matcha.Color borderColor = 3;</code>
       */
      public boolean hasBorderColor() {
        return borderColorBuilder_ != null || borderColor_ != null;
      }
      /**
       * <code>.matcha.Color borderColor = 3;</code>
       */
      public io.gomatcha.matcha.pb.Pb.Color getBorderColor() {
        if (borderColorBuilder_ == null) {
          return borderColor_ == null ? io.gomatcha.matcha.pb.Pb.Color.getDefaultInstance() : borderColor_;
        } else {
          return borderColorBuilder_.getMessage();
        }
      }
      /**
       * <code>.matcha.Color borderColor = 3;</code>
       */
      public Builder setBorderColor(io.gomatcha.matcha.pb.Pb.Color value) {
        if (borderColorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          borderColor_ = value;
          onChanged();
        } else {
          borderColorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.matcha.Color borderColor = 3;</code>
       */
      public Builder setBorderColor(
          io.gomatcha.matcha.pb.Pb.Color.Builder builderForValue) {
        if (borderColorBuilder_ == null) {
          borderColor_ = builderForValue.build();
          onChanged();
        } else {
          borderColorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.matcha.Color borderColor = 3;</code>
       */
      public Builder mergeBorderColor(io.gomatcha.matcha.pb.Pb.Color value) {
        if (borderColorBuilder_ == null) {
          if (borderColor_ != null) {
            borderColor_ =
              io.gomatcha.matcha.pb.Pb.Color.newBuilder(borderColor_).mergeFrom(value).buildPartial();
          } else {
            borderColor_ = value;
          }
          onChanged();
        } else {
          borderColorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.matcha.Color borderColor = 3;</code>
       */
      public Builder clearBorderColor() {
        if (borderColorBuilder_ == null) {
          borderColor_ = null;
          onChanged();
        } else {
          borderColor_ = null;
          borderColorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.matcha.Color borderColor = 3;</code>
       */
      public io.gomatcha.matcha.pb.Pb.Color.Builder getBorderColorBuilder() {
        
        onChanged();
        return getBorderColorFieldBuilder().getBuilder();
      }
      /**
       * <code>.matcha.Color borderColor = 3;</code>
       */
      public io.gomatcha.matcha.pb.Pb.ColorOrBuilder getBorderColorOrBuilder() {
        if (borderColorBuilder_ != null) {
          return borderColorBuilder_.getMessageOrBuilder();
        } else {
          return borderColor_ == null ?
              io.gomatcha.matcha.pb.Pb.Color.getDefaultInstance() : borderColor_;
        }
      }
      /**
       * <code>.matcha.Color borderColor = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.gomatcha.matcha.pb.Pb.Color, io.gomatcha.matcha.pb.Pb.Color.Builder, io.gomatcha.matcha.pb.Pb.ColorOrBuilder> 
          getBorderColorFieldBuilder() {
        if (borderColorBuilder_ == null) {
          borderColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.gomatcha.matcha.pb.Pb.Color, io.gomatcha.matcha.pb.Pb.Color.Builder, io.gomatcha.matcha.pb.Pb.ColorOrBuilder>(
                  getBorderColor(),
                  getParentForChildren(),
                  isClean());
          borderColor_ = null;
        }
        return borderColorBuilder_;
      }

      private double borderWidth_ ;
      /**
       * <code>double borderWidth = 4;</code>
       */
      public double getBorderWidth() {
        return borderWidth_;
      }
      /**
       * <code>double borderWidth = 4;</code>
       */
      public Builder setBorderWidth(double value) {
        
        borderWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double borderWidth = 4;</code>
       */
      public Builder clearBorderWidth() {
        
        borderWidth_ = 0D;
        onChanged();
        return this;
      }

      private double cornerRadius_ ;
      /**
       * <code>double cornerRadius = 5;</code>
       */
      public double getCornerRadius() {
        return cornerRadius_;
      }
      /**
       * <code>double cornerRadius = 5;</code>
       */
      public Builder setCornerRadius(double value) {
        
        cornerRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double cornerRadius = 5;</code>
       */
      public Builder clearCornerRadius() {
        
        cornerRadius_ = 0D;
        onChanged();
        return this;
      }

      private double shadowRadius_ ;
      /**
       * <code>double shadowRadius = 7;</code>
       */
      public double getShadowRadius() {
        return shadowRadius_;
      }
      /**
       * <code>double shadowRadius = 7;</code>
       */
      public Builder setShadowRadius(double value) {
        
        shadowRadius_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double shadowRadius = 7;</code>
       */
      public Builder clearShadowRadius() {
        
        shadowRadius_ = 0D;
        onChanged();
        return this;
      }

      private io.gomatcha.matcha.pb.layout.PbLayout.Point shadowOffset_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.gomatcha.matcha.pb.layout.PbLayout.Point, io.gomatcha.matcha.pb.layout.PbLayout.Point.Builder, io.gomatcha.matcha.pb.layout.PbLayout.PointOrBuilder> shadowOffsetBuilder_;
      /**
       * <code>.matcha.layout.Point shadowOffset = 8;</code>
       */
      public boolean hasShadowOffset() {
        return shadowOffsetBuilder_ != null || shadowOffset_ != null;
      }
      /**
       * <code>.matcha.layout.Point shadowOffset = 8;</code>
       */
      public io.gomatcha.matcha.pb.layout.PbLayout.Point getShadowOffset() {
        if (shadowOffsetBuilder_ == null) {
          return shadowOffset_ == null ? io.gomatcha.matcha.pb.layout.PbLayout.Point.getDefaultInstance() : shadowOffset_;
        } else {
          return shadowOffsetBuilder_.getMessage();
        }
      }
      /**
       * <code>.matcha.layout.Point shadowOffset = 8;</code>
       */
      public Builder setShadowOffset(io.gomatcha.matcha.pb.layout.PbLayout.Point value) {
        if (shadowOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shadowOffset_ = value;
          onChanged();
        } else {
          shadowOffsetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.matcha.layout.Point shadowOffset = 8;</code>
       */
      public Builder setShadowOffset(
          io.gomatcha.matcha.pb.layout.PbLayout.Point.Builder builderForValue) {
        if (shadowOffsetBuilder_ == null) {
          shadowOffset_ = builderForValue.build();
          onChanged();
        } else {
          shadowOffsetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.matcha.layout.Point shadowOffset = 8;</code>
       */
      public Builder mergeShadowOffset(io.gomatcha.matcha.pb.layout.PbLayout.Point value) {
        if (shadowOffsetBuilder_ == null) {
          if (shadowOffset_ != null) {
            shadowOffset_ =
              io.gomatcha.matcha.pb.layout.PbLayout.Point.newBuilder(shadowOffset_).mergeFrom(value).buildPartial();
          } else {
            shadowOffset_ = value;
          }
          onChanged();
        } else {
          shadowOffsetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.matcha.layout.Point shadowOffset = 8;</code>
       */
      public Builder clearShadowOffset() {
        if (shadowOffsetBuilder_ == null) {
          shadowOffset_ = null;
          onChanged();
        } else {
          shadowOffset_ = null;
          shadowOffsetBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.matcha.layout.Point shadowOffset = 8;</code>
       */
      public io.gomatcha.matcha.pb.layout.PbLayout.Point.Builder getShadowOffsetBuilder() {
        
        onChanged();
        return getShadowOffsetFieldBuilder().getBuilder();
      }
      /**
       * <code>.matcha.layout.Point shadowOffset = 8;</code>
       */
      public io.gomatcha.matcha.pb.layout.PbLayout.PointOrBuilder getShadowOffsetOrBuilder() {
        if (shadowOffsetBuilder_ != null) {
          return shadowOffsetBuilder_.getMessageOrBuilder();
        } else {
          return shadowOffset_ == null ?
              io.gomatcha.matcha.pb.layout.PbLayout.Point.getDefaultInstance() : shadowOffset_;
        }
      }
      /**
       * <code>.matcha.layout.Point shadowOffset = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.gomatcha.matcha.pb.layout.PbLayout.Point, io.gomatcha.matcha.pb.layout.PbLayout.Point.Builder, io.gomatcha.matcha.pb.layout.PbLayout.PointOrBuilder> 
          getShadowOffsetFieldBuilder() {
        if (shadowOffsetBuilder_ == null) {
          shadowOffsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.gomatcha.matcha.pb.layout.PbLayout.Point, io.gomatcha.matcha.pb.layout.PbLayout.Point.Builder, io.gomatcha.matcha.pb.layout.PbLayout.PointOrBuilder>(
                  getShadowOffset(),
                  getParentForChildren(),
                  isClean());
          shadowOffset_ = null;
        }
        return shadowOffsetBuilder_;
      }

      private io.gomatcha.matcha.pb.Pb.Color shadowColor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.gomatcha.matcha.pb.Pb.Color, io.gomatcha.matcha.pb.Pb.Color.Builder, io.gomatcha.matcha.pb.Pb.ColorOrBuilder> shadowColorBuilder_;
      /**
       * <code>.matcha.Color shadowColor = 9;</code>
       */
      public boolean hasShadowColor() {
        return shadowColorBuilder_ != null || shadowColor_ != null;
      }
      /**
       * <code>.matcha.Color shadowColor = 9;</code>
       */
      public io.gomatcha.matcha.pb.Pb.Color getShadowColor() {
        if (shadowColorBuilder_ == null) {
          return shadowColor_ == null ? io.gomatcha.matcha.pb.Pb.Color.getDefaultInstance() : shadowColor_;
        } else {
          return shadowColorBuilder_.getMessage();
        }
      }
      /**
       * <code>.matcha.Color shadowColor = 9;</code>
       */
      public Builder setShadowColor(io.gomatcha.matcha.pb.Pb.Color value) {
        if (shadowColorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shadowColor_ = value;
          onChanged();
        } else {
          shadowColorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.matcha.Color shadowColor = 9;</code>
       */
      public Builder setShadowColor(
          io.gomatcha.matcha.pb.Pb.Color.Builder builderForValue) {
        if (shadowColorBuilder_ == null) {
          shadowColor_ = builderForValue.build();
          onChanged();
        } else {
          shadowColorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.matcha.Color shadowColor = 9;</code>
       */
      public Builder mergeShadowColor(io.gomatcha.matcha.pb.Pb.Color value) {
        if (shadowColorBuilder_ == null) {
          if (shadowColor_ != null) {
            shadowColor_ =
              io.gomatcha.matcha.pb.Pb.Color.newBuilder(shadowColor_).mergeFrom(value).buildPartial();
          } else {
            shadowColor_ = value;
          }
          onChanged();
        } else {
          shadowColorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.matcha.Color shadowColor = 9;</code>
       */
      public Builder clearShadowColor() {
        if (shadowColorBuilder_ == null) {
          shadowColor_ = null;
          onChanged();
        } else {
          shadowColor_ = null;
          shadowColorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.matcha.Color shadowColor = 9;</code>
       */
      public io.gomatcha.matcha.pb.Pb.Color.Builder getShadowColorBuilder() {
        
        onChanged();
        return getShadowColorFieldBuilder().getBuilder();
      }
      /**
       * <code>.matcha.Color shadowColor = 9;</code>
       */
      public io.gomatcha.matcha.pb.Pb.ColorOrBuilder getShadowColorOrBuilder() {
        if (shadowColorBuilder_ != null) {
          return shadowColorBuilder_.getMessageOrBuilder();
        } else {
          return shadowColor_ == null ?
              io.gomatcha.matcha.pb.Pb.Color.getDefaultInstance() : shadowColor_;
        }
      }
      /**
       * <code>.matcha.Color shadowColor = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.gomatcha.matcha.pb.Pb.Color, io.gomatcha.matcha.pb.Pb.Color.Builder, io.gomatcha.matcha.pb.Pb.ColorOrBuilder> 
          getShadowColorFieldBuilder() {
        if (shadowColorBuilder_ == null) {
          shadowColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.gomatcha.matcha.pb.Pb.Color, io.gomatcha.matcha.pb.Pb.Color.Builder, io.gomatcha.matcha.pb.Pb.ColorOrBuilder>(
                  getShadowColor(),
                  getParentForChildren(),
                  isClean());
          shadowColor_ = null;
        }
        return shadowColorBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:matcha.paint.Style)
    }

    // @@protoc_insertion_point(class_scope:matcha.paint.Style)
    private static final io.gomatcha.matcha.pb.paint.PbPaint.Style DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.gomatcha.matcha.pb.paint.PbPaint.Style();
    }

    public static io.gomatcha.matcha.pb.paint.PbPaint.Style getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Style>
        PARSER = new com.google.protobuf.AbstractParser<Style>() {
      public Style parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Style(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Style> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Style> getParserForType() {
      return PARSER;
    }

    public io.gomatcha.matcha.pb.paint.PbPaint.Style getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_matcha_paint_Style_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_matcha_paint_Style_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'gomatcha.io/matcha/pb/paint/paint.prot" +
      "o\022\014matcha.paint\032!gomatcha.io/matcha/pb/i" +
      "mage.proto\032)gomatcha.io/matcha/pb/layout" +
      "/layout.proto\"\372\001\n\005Style\022\024\n\014transparency\030" +
      "\001 \001(\001\022&\n\017backgroundColor\030\002 \001(\0132\r.matcha." +
      "Color\022\"\n\013borderColor\030\003 \001(\0132\r.matcha.Colo" +
      "r\022\023\n\013borderWidth\030\004 \001(\001\022\024\n\014cornerRadius\030\005" +
      " \001(\001\022\024\n\014shadowRadius\030\007 \001(\001\022*\n\014shadowOffs" +
      "et\030\010 \001(\0132\024.matcha.layout.Point\022\"\n\013shadow" +
      "Color\030\t \001(\0132\r.matcha.ColorB=\n\033io.gomatch",
      "a.matcha.pb.paintB\007PbPaintZ\005paint\242\002\rMatc" +
      "haPaintPBb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.gomatcha.matcha.pb.Pb.getDescriptor(),
          io.gomatcha.matcha.pb.layout.PbLayout.getDescriptor(),
        }, assigner);
    internal_static_matcha_paint_Style_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_matcha_paint_Style_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_matcha_paint_Style_descriptor,
        new java.lang.String[] { "Transparency", "BackgroundColor", "BorderColor", "BorderWidth", "CornerRadius", "ShadowRadius", "ShadowOffset", "ShadowColor", });
    io.gomatcha.matcha.pb.Pb.getDescriptor();
    io.gomatcha.matcha.pb.layout.PbLayout.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
