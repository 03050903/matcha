// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gomatcha.io/matcha/pb/keyboard/keyboard.proto

/*
Package keyboard is a generated protocol buffer package.

It is generated from these files:
	gomatcha.io/matcha/pb/keyboard/keyboard.proto

It has these top-level messages:
*/
package keyboard

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Type int32

const (
	Type_TEXT_TYPE      Type = 0
	Type_NUMBER_TYPE    Type = 1
	Type_EMAIL_TYPE     Type = 2
	Type_URL_TYPE       Type = 3
	Type_PHONE_TYPE     Type = 4
	Type_DATE_TIME_TYPE Type = 5
)

var Type_name = map[int32]string{
	0: "TEXT_TYPE",
	1: "NUMBER_TYPE",
	2: "EMAIL_TYPE",
	3: "URL_TYPE",
	4: "PHONE_TYPE",
	5: "DATE_TIME_TYPE",
}
var Type_value = map[string]int32{
	"TEXT_TYPE":      0,
	"NUMBER_TYPE":    1,
	"EMAIL_TYPE":     2,
	"URL_TYPE":       3,
	"PHONE_TYPE":     4,
	"DATE_TIME_TYPE": 5,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Appearance int32

const (
	Appearance_DEFAULT_APPEARANCE Appearance = 0
	Appearance_LIGHT_APPEARANCE   Appearance = 1
	Appearance_DARK_APPEARANCE    Appearance = 2
)

var Appearance_name = map[int32]string{
	0: "DEFAULT_APPEARANCE",
	1: "LIGHT_APPEARANCE",
	2: "DARK_APPEARANCE",
}
var Appearance_value = map[string]int32{
	"DEFAULT_APPEARANCE": 0,
	"LIGHT_APPEARANCE":   1,
	"DARK_APPEARANCE":    2,
}

func (x Appearance) String() string {
	return proto.EnumName(Appearance_name, int32(x))
}
func (Appearance) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ReturnType int32

const (
	ReturnType_DEFAULT_RETURN_TYPE        ReturnType = 0
	ReturnType_GO_RETURN_TYPE             ReturnType = 1
	ReturnType_GOOGLE_RETURN_TYPE         ReturnType = 2
	ReturnType_JOIN_RETURN_TYPE           ReturnType = 3
	ReturnType_NEXT_RETURN_TYPE           ReturnType = 4
	ReturnType_ROUTE_RETURN_TYPE          ReturnType = 5
	ReturnType_SEARCH_RETURN_TYPE         ReturnType = 6
	ReturnType_SEND_RETURN_TYPE           ReturnType = 7
	ReturnType_YAHOO_RETURN_TYPE          ReturnType = 8
	ReturnType_DONE_RETURN_TYPE           ReturnType = 9
	ReturnType_EMERGENCY_CALL_RETURN_TYPE ReturnType = 10
	ReturnType_CONTINUE_RETURN_TYPE       ReturnType = 11
)

var ReturnType_name = map[int32]string{
	0:  "DEFAULT_RETURN_TYPE",
	1:  "GO_RETURN_TYPE",
	2:  "GOOGLE_RETURN_TYPE",
	3:  "JOIN_RETURN_TYPE",
	4:  "NEXT_RETURN_TYPE",
	5:  "ROUTE_RETURN_TYPE",
	6:  "SEARCH_RETURN_TYPE",
	7:  "SEND_RETURN_TYPE",
	8:  "YAHOO_RETURN_TYPE",
	9:  "DONE_RETURN_TYPE",
	10: "EMERGENCY_CALL_RETURN_TYPE",
	11: "CONTINUE_RETURN_TYPE",
}
var ReturnType_value = map[string]int32{
	"DEFAULT_RETURN_TYPE":        0,
	"GO_RETURN_TYPE":             1,
	"GOOGLE_RETURN_TYPE":         2,
	"JOIN_RETURN_TYPE":           3,
	"NEXT_RETURN_TYPE":           4,
	"ROUTE_RETURN_TYPE":          5,
	"SEARCH_RETURN_TYPE":         6,
	"SEND_RETURN_TYPE":           7,
	"YAHOO_RETURN_TYPE":          8,
	"DONE_RETURN_TYPE":           9,
	"EMERGENCY_CALL_RETURN_TYPE": 10,
	"CONTINUE_RETURN_TYPE":       11,
}

func (x ReturnType) String() string {
	return proto.EnumName(ReturnType_name, int32(x))
}
func (ReturnType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterEnum("matcha.keyboard.Type", Type_name, Type_value)
	proto.RegisterEnum("matcha.keyboard.Appearance", Appearance_name, Appearance_value)
	proto.RegisterEnum("matcha.keyboard.ReturnType", ReturnType_name, ReturnType_value)
}

func init() { proto.RegisterFile("gomatcha.io/matcha/pb/keyboard/keyboard.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xcd, 0x8e, 0xa2, 0x40,
	0x10, 0xc7, 0x57, 0xfc, 0x58, 0x2d, 0x77, 0xd5, 0x6d, 0xdd, 0x8f, 0xec, 0xc1, 0x07, 0x30, 0x59,
	0x3d, 0xec, 0x13, 0x34, 0x50, 0x03, 0x8c, 0xd0, 0x4d, 0xda, 0x26, 0x19, 0xe7, 0x42, 0xc0, 0x21,
	0xa3, 0x99, 0x8c, 0x10, 0xe2, 0x1c, 0x7c, 0x9d, 0xb9, 0xcd, 0x5b, 0x4e, 0x5a, 0xc0, 0xd8, 0x27,
	0xaa, 0x7e, 0x55, 0xfc, 0xab, 0xab, 0xf2, 0x87, 0x7f, 0xcf, 0xf9, 0x6b, 0x72, 0xda, 0xed, 0x93,
	0xe5, 0x21, 0x5f, 0x55, 0xd1, 0xaa, 0x48, 0x57, 0x2f, 0xd9, 0x39, 0xcd, 0x93, 0xf2, 0xe9, 0x1a,
	0x2c, 0x8b, 0x32, 0x3f, 0xe5, 0x64, 0x5c, 0x37, 0x37, 0x78, 0xb1, 0x87, 0x8e, 0x3c, 0x17, 0x19,
	0xf9, 0x0e, 0x03, 0x89, 0x0f, 0x32, 0x96, 0xdb, 0x10, 0x27, 0x5f, 0xc8, 0x18, 0x86, 0x2c, 0x0a,
	0x4c, 0x14, 0x15, 0x68, 0x91, 0x11, 0x00, 0x06, 0xd4, 0xf3, 0xab, 0xdc, 0x20, 0xdf, 0xa0, 0x1f,
	0x89, 0x3a, 0x6b, 0xab, 0x6a, 0xe8, 0x72, 0x86, 0x55, 0xde, 0x21, 0x04, 0x46, 0x36, 0x95, 0x18,
	0x4b, 0x2f, 0xa8, 0x59, 0x77, 0xc1, 0x01, 0x68, 0x51, 0x64, 0x49, 0x99, 0x1c, 0x77, 0x19, 0xf9,
	0x05, 0xc4, 0xc6, 0x3b, 0x1a, 0xf9, 0x32, 0xa6, 0x61, 0x88, 0x54, 0x50, 0x66, 0xa9, 0xc1, 0x33,
	0x98, 0xf8, 0x9e, 0xe3, 0x6a, 0xb4, 0x45, 0xa6, 0x30, 0xb6, 0xa9, 0x58, 0xdf, 0x42, 0x63, 0xf1,
	0x61, 0x00, 0x88, 0xec, 0xf4, 0x56, 0x1e, 0x2f, 0x1b, 0xfc, 0x86, 0x69, 0xa3, 0x28, 0x50, 0x46,
	0x82, 0x35, 0xbb, 0x10, 0x18, 0x39, 0x5c, 0x63, 0x2d, 0x35, 0xde, 0xe1, 0xdc, 0xf1, 0x51, 0xe3,
	0x86, 0x1a, 0x7f, 0xcf, 0x3d, 0xa6, 0xd1, 0xb6, 0xa2, 0x4c, 0x1d, 0xe7, 0x96, 0x76, 0xc8, 0x4f,
	0xf8, 0x21, 0x78, 0x24, 0x75, 0x89, 0xae, 0x92, 0xde, 0x20, 0x15, 0x96, 0xab, 0xf1, 0x9e, 0x12,
	0xd9, 0x20, 0xb3, 0x35, 0xfa, 0x55, 0x89, 0x6c, 0xa9, 0xcb, 0xf5, 0xf7, 0xf5, 0x55, 0xb3, 0xad,
	0xee, 0x79, 0x4b, 0x07, 0x64, 0x0e, 0x7f, 0x31, 0x40, 0xe1, 0x20, 0xb3, 0xb6, 0xb1, 0x45, 0x7d,
	0x5f, 0xab, 0x03, 0xf9, 0x03, 0x33, 0x8b, 0x33, 0xe9, 0xb1, 0x48, 0xff, 0x73, 0x68, 0x7a, 0x30,
	0x3f, 0xe4, 0xcb, 0xab, 0x57, 0xea, 0x4f, 0x91, 0x5e, 0x8d, 0x60, 0x42, 0x98, 0xae, 0xeb, 0xf8,
	0xb1, 0xdf, 0xd0, 0x77, 0x63, 0x12, 0x5c, 0x5a, 0x9b, 0x52, 0x68, 0xa6, 0xbd, 0x8b, 0x93, 0xfe,
	0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0x9e, 0xc3, 0x0e, 0xdb, 0x7a, 0x02, 0x00, 0x00,
}
