// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gomatcha.io/matcha/pb/view/ios/stackview.proto

/*
Package ios is a generated protocol buffer package.

It is generated from these files:
	gomatcha.io/matcha/pb/view/ios/stackview.proto

It has these top-level messages:
	StackChildView
	StackView
	StackBar
	StackEvent
*/
package ios

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import matcha "gomatcha.io/matcha/pb"
import matcha_text "gomatcha.io/matcha/pb/text"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StackChildView struct {
	ScreenId int64 `protobuf:"varint,3,opt,name=screenId" json:"screenId,omitempty"`
}

func (m *StackChildView) Reset()                    { *m = StackChildView{} }
func (m *StackChildView) String() string            { return proto.CompactTextString(m) }
func (*StackChildView) ProtoMessage()               {}
func (*StackChildView) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StackChildView) GetScreenId() int64 {
	if m != nil {
		return m.ScreenId
	}
	return 0
}

type StackView struct {
	Children       []*StackChildView      `protobuf:"bytes,1,rep,name=children" json:"children,omitempty"`
	TitleTextStyle *matcha_text.TextStyle `protobuf:"bytes,2,opt,name=titleTextStyle" json:"titleTextStyle,omitempty"`
	BackTextStyle  *matcha_text.TextStyle `protobuf:"bytes,3,opt,name=backTextStyle" json:"backTextStyle,omitempty"`
	BarColor       *matcha.Color          `protobuf:"bytes,4,opt,name=barColor" json:"barColor,omitempty"`
}

func (m *StackView) Reset()                    { *m = StackView{} }
func (m *StackView) String() string            { return proto.CompactTextString(m) }
func (*StackView) ProtoMessage()               {}
func (*StackView) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StackView) GetChildren() []*StackChildView {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *StackView) GetTitleTextStyle() *matcha_text.TextStyle {
	if m != nil {
		return m.TitleTextStyle
	}
	return nil
}

func (m *StackView) GetBackTextStyle() *matcha_text.TextStyle {
	if m != nil {
		return m.BackTextStyle
	}
	return nil
}

func (m *StackView) GetBarColor() *matcha.Color {
	if m != nil {
		return m.BarColor
	}
	return nil
}

type StackBar struct {
	Title                 string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	BackButtonHidden      bool   `protobuf:"varint,7,opt,name=backButtonHidden" json:"backButtonHidden,omitempty"`
	CustomBackButtonTitle bool   `protobuf:"varint,2,opt,name=customBackButtonTitle" json:"customBackButtonTitle,omitempty"`
	BackButtonTitle       string `protobuf:"bytes,3,opt,name=backButtonTitle" json:"backButtonTitle,omitempty"`
	HasTitleView          bool   `protobuf:"varint,4,opt,name=hasTitleView" json:"hasTitleView,omitempty"`
	RightViewCount        int64  `protobuf:"varint,5,opt,name=rightViewCount" json:"rightViewCount,omitempty"`
	LeftViewCount         int64  `protobuf:"varint,6,opt,name=leftViewCount" json:"leftViewCount,omitempty"`
}

func (m *StackBar) Reset()                    { *m = StackBar{} }
func (m *StackBar) String() string            { return proto.CompactTextString(m) }
func (*StackBar) ProtoMessage()               {}
func (*StackBar) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StackBar) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *StackBar) GetBackButtonHidden() bool {
	if m != nil {
		return m.BackButtonHidden
	}
	return false
}

func (m *StackBar) GetCustomBackButtonTitle() bool {
	if m != nil {
		return m.CustomBackButtonTitle
	}
	return false
}

func (m *StackBar) GetBackButtonTitle() string {
	if m != nil {
		return m.BackButtonTitle
	}
	return ""
}

func (m *StackBar) GetHasTitleView() bool {
	if m != nil {
		return m.HasTitleView
	}
	return false
}

func (m *StackBar) GetRightViewCount() int64 {
	if m != nil {
		return m.RightViewCount
	}
	return 0
}

func (m *StackBar) GetLeftViewCount() int64 {
	if m != nil {
		return m.LeftViewCount
	}
	return 0
}

type StackEvent struct {
	Id []int64 `protobuf:"varint,1,rep,packed,name=id" json:"id,omitempty"`
}

func (m *StackEvent) Reset()                    { *m = StackEvent{} }
func (m *StackEvent) String() string            { return proto.CompactTextString(m) }
func (*StackEvent) ProtoMessage()               {}
func (*StackEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *StackEvent) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

func init() {
	proto.RegisterType((*StackChildView)(nil), "matcha.view.stacknav.StackChildView")
	proto.RegisterType((*StackView)(nil), "matcha.view.stacknav.StackView")
	proto.RegisterType((*StackBar)(nil), "matcha.view.stacknav.StackBar")
	proto.RegisterType((*StackEvent)(nil), "matcha.view.stacknav.StackEvent")
}

func init() { proto.RegisterFile("gomatcha.io/matcha/pb/view/ios/stackview.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcf, 0xaf, 0x93, 0x40,
	0x10, 0xc7, 0x03, 0xf8, 0x9e, 0xbc, 0xc1, 0xa2, 0xd9, 0x3c, 0x0d, 0x69, 0x8c, 0x41, 0xf2, 0x34,
	0x68, 0x0c, 0x24, 0x4f, 0x8f, 0xc6, 0x34, 0x34, 0x26, 0x7a, 0x30, 0x36, 0xdb, 0xc6, 0x83, 0xb7,
	0x05, 0xd6, 0xb2, 0x29, 0x65, 0x1b, 0xd8, 0xfe, 0xf0, 0x9f, 0xf1, 0xe0, 0x1f, 0xe9, 0xd9, 0x30,
	0xb4, 0x54, 0x90, 0xbc, 0x0b, 0xec, 0x7c, 0xe7, 0xf3, 0x1d, 0x66, 0x87, 0x81, 0x60, 0x29, 0xd7,
	0x4c, 0x25, 0x19, 0x0b, 0x84, 0x0c, 0x9b, 0x53, 0xb8, 0x89, 0xc3, 0x9d, 0xe0, 0xfb, 0x50, 0xc8,
	0x2a, 0xac, 0x14, 0x4b, 0x56, 0x75, 0x14, 0x6c, 0x4a, 0xa9, 0x24, 0xb9, 0x3e, 0xd2, 0x28, 0x61,
	0xb2, 0x60, 0xbb, 0xf1, 0xf3, 0xe1, 0x2a, 0x62, 0xcd, 0x96, 0xbc, 0x31, 0x8e, 0x5f, 0x0c, 0x23,
	0x8a, 0x1f, 0x14, 0x3e, 0x1a, 0xcc, 0x7b, 0x03, 0xf6, 0xbc, 0xae, 0x3a, 0xcd, 0x44, 0x9e, 0x7e,
	0x13, 0x7c, 0x4f, 0xc6, 0x60, 0x56, 0x49, 0xc9, 0x79, 0xf1, 0x39, 0x75, 0x0c, 0x57, 0xf3, 0x0d,
	0xda, 0xc6, 0xde, 0x1f, 0x0d, 0xae, 0x10, 0x47, 0x72, 0x02, 0x66, 0x52, 0xdb, 0x4a, 0x5e, 0x38,
	0x9a, 0x6b, 0xf8, 0xd6, 0xed, 0x4d, 0x30, 0xd4, 0x6e, 0xd0, 0xfd, 0x02, 0x6d, 0x5d, 0xe4, 0x03,
	0xd8, 0x4a, 0xa8, 0x9c, 0x2f, 0xf8, 0x41, 0xcd, 0xd5, 0xcf, 0x9c, 0x3b, 0xba, 0xab, 0xf9, 0xd6,
	0xed, 0x93, 0x53, 0x1d, 0xec, 0xb4, 0xcd, 0xd2, 0x1e, 0x4d, 0xde, 0xc3, 0x28, 0x66, 0xc9, 0xea,
	0x6c, 0x37, 0xee, 0xb4, 0x77, 0x61, 0xf2, 0x0a, 0xcc, 0x98, 0x95, 0x53, 0x99, 0xcb, 0xd2, 0xb9,
	0x87, 0xc6, 0xd1, 0xc9, 0x88, 0x22, 0x6d, 0xd3, 0xde, 0x2f, 0x1d, 0x4c, 0xbc, 0x45, 0xc4, 0x4a,
	0x72, 0x0d, 0x17, 0xd8, 0x87, 0xa3, 0xb9, 0x9a, 0x7f, 0x45, 0x9b, 0x80, 0xbc, 0x86, 0x47, 0x75,
	0xf9, 0x68, 0xab, 0x94, 0x2c, 0x3e, 0x89, 0x34, 0xe5, 0x85, 0x73, 0xdf, 0xd5, 0x7c, 0x93, 0xfe,
	0xa7, 0x93, 0x77, 0xf0, 0x38, 0xd9, 0x56, 0x4a, 0xae, 0xa3, 0x36, 0xb3, 0xc0, 0x8a, 0x3a, 0x1a,
	0x86, 0x93, 0xc4, 0x87, 0x87, 0x71, 0x8f, 0x37, 0xb0, 0x83, 0xbe, 0x4c, 0x3c, 0x78, 0x90, 0xb1,
	0x0a, 0xcf, 0xf5, 0xc4, 0xf1, 0x76, 0x26, 0xed, 0x68, 0xe4, 0x25, 0xd8, 0xa5, 0x58, 0x66, 0xaa,
	0x0e, 0xa6, 0x72, 0x5b, 0x28, 0xe7, 0x02, 0xff, 0x76, 0x4f, 0x25, 0x37, 0x30, 0xca, 0xf9, 0x8f,
	0x7f, 0xb0, 0x4b, 0xc4, 0xba, 0xa2, 0xf7, 0x14, 0x00, 0xe7, 0xf3, 0x71, 0xc7, 0x0b, 0x45, 0x6c,
	0xd0, 0x45, 0x8a, 0x3b, 0x61, 0x50, 0x5d, 0xa4, 0xd1, 0x04, 0x9e, 0x09, 0x79, 0x5e, 0xfd, 0xe3,
	0x6b, 0x13, 0x37, 0x7b, 0x22, 0x64, 0x15, 0x59, 0xb3, 0xb8, 0x5d, 0xac, 0xef, 0x86, 0x90, 0xd5,
	0x6f, 0xdd, 0xfa, 0x82, 0x98, 0xf8, 0x3a, 0x9f, 0x45, 0xf1, 0x25, 0xae, 0xeb, 0xdb, 0xbf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x69, 0xa7, 0x49, 0x51, 0x40, 0x03, 0x00, 0x00,
}
