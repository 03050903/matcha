// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gomatcha.io/matcha/pb/view/android/stackview.proto

package android

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type StackChildView struct {
	ScreenId int64 `protobuf:"varint,3,opt,name=screenId" json:"screenId,omitempty"`
}

func (m *StackChildView) Reset()                    { *m = StackChildView{} }
func (m *StackChildView) String() string            { return proto.CompactTextString(m) }
func (*StackChildView) ProtoMessage()               {}
func (*StackChildView) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *StackChildView) GetScreenId() int64 {
	if m != nil {
		return m.ScreenId
	}
	return 0
}

type StackView struct {
	Children []*StackChildView `protobuf:"bytes,1,rep,name=children" json:"children,omitempty"`
}

func (m *StackView) Reset()                    { *m = StackView{} }
func (m *StackView) String() string            { return proto.CompactTextString(m) }
func (*StackView) ProtoMessage()               {}
func (*StackView) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *StackView) GetChildren() []*StackChildView {
	if m != nil {
		return m.Children
	}
	return nil
}

type StackBar struct {
	Title            string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	BackButtonHidden bool   `protobuf:"varint,2,opt,name=backButtonHidden" json:"backButtonHidden,omitempty"`
}

func (m *StackBar) Reset()                    { *m = StackBar{} }
func (m *StackBar) String() string            { return proto.CompactTextString(m) }
func (*StackBar) ProtoMessage()               {}
func (*StackBar) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *StackBar) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *StackBar) GetBackButtonHidden() bool {
	if m != nil {
		return m.BackButtonHidden
	}
	return false
}

type StackEvent struct {
	Id []int64 `protobuf:"varint,1,rep,packed,name=id" json:"id,omitempty"`
}

func (m *StackEvent) Reset()                    { *m = StackEvent{} }
func (m *StackEvent) String() string            { return proto.CompactTextString(m) }
func (*StackEvent) ProtoMessage()               {}
func (*StackEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *StackEvent) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

func init() {
	proto.RegisterType((*StackChildView)(nil), "matcha.view.android.StackChildView")
	proto.RegisterType((*StackView)(nil), "matcha.view.android.StackView")
	proto.RegisterType((*StackBar)(nil), "matcha.view.android.StackBar")
	proto.RegisterType((*StackEvent)(nil), "matcha.view.android.StackEvent")
}

func init() { proto.RegisterFile("gomatcha.io/matcha/pb/view/android/stackview.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0xfc, 0x30,
	0x10, 0xc6, 0x69, 0xcb, 0xff, 0x6f, 0x77, 0x16, 0x56, 0x89, 0x1e, 0x8a, 0x78, 0x28, 0xf1, 0x52,
	0x44, 0x12, 0x58, 0x1f, 0x40, 0xac, 0x08, 0x0a, 0x15, 0x96, 0x08, 0x1e, 0xbc, 0x25, 0x4d, 0x70,
	0x07, 0xd7, 0xa4, 0x64, 0xe3, 0xee, 0xfb, 0xf8, 0xa4, 0xd2, 0xb4, 0x14, 0x16, 0x3d, 0x25, 0xdf,
	0x97, 0xdf, 0x37, 0x99, 0x19, 0x58, 0xbe, 0xbb, 0x4f, 0x19, 0xda, 0xb5, 0x64, 0xe8, 0xf8, 0x70,
	0xe3, 0x9d, 0xe2, 0x3b, 0x34, 0x7b, 0x2e, 0xad, 0xf6, 0x0e, 0x35, 0xdf, 0x06, 0xd9, 0x7e, 0xf4,
	0x0e, 0xeb, 0xbc, 0x0b, 0x8e, 0x9c, 0x8e, 0x89, 0x68, 0x8d, 0x10, 0xbd, 0x86, 0xc5, 0x4b, 0xcf,
	0xdd, 0xaf, 0x71, 0xa3, 0x5f, 0xd1, 0xec, 0xc9, 0x39, 0xe4, 0xdb, 0xd6, 0x1b, 0x63, 0x9f, 0x74,
	0x91, 0x95, 0x49, 0x95, 0x89, 0x49, 0xd3, 0x06, 0x66, 0x91, 0x8e, 0xe0, 0x2d, 0xe4, 0x6d, 0x9f,
	0xf2, 0xc6, 0x16, 0x49, 0x99, 0x55, 0xf3, 0xe5, 0x25, 0xfb, 0xe3, 0x0b, 0x76, 0x58, 0x5f, 0x4c,
	0x21, 0xda, 0x40, 0x1e, 0xdf, 0x6a, 0xe9, 0xc9, 0x19, 0xfc, 0x0b, 0x18, 0x36, 0xa6, 0x48, 0xca,
	0xa4, 0x9a, 0x89, 0x41, 0x90, 0x2b, 0x38, 0x51, 0x3d, 0xf0, 0x15, 0x82, 0xb3, 0x8f, 0xa8, 0xb5,
	0xb1, 0x45, 0x5a, 0x26, 0x55, 0x2e, 0x7e, 0xf9, 0xf4, 0x02, 0x20, 0x56, 0x7b, 0xd8, 0x19, 0x1b,
	0xc8, 0x02, 0x52, 0xd4, 0xb1, 0xad, 0x4c, 0xa4, 0xa8, 0xeb, 0x06, 0x28, 0x3a, 0x36, 0x6d, 0x6d,
	0x3c, 0x3a, 0x75, 0xd0, 0x6a, 0x3d, 0x5f, 0xa9, 0x69, 0xbe, 0xb7, 0xa3, 0xd1, 0xfd, 0x4e, 0x8f,
	0x9f, 0x23, 0x7e, 0x37, 0xe8, 0x55, 0xad, 0xfe, 0xc7, 0x8d, 0xde, 0xfc, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x4a, 0xd9, 0xae, 0xc2, 0x87, 0x01, 0x00, 0x00,
}
